name: Terraform CI/CD

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - uat
          - prod
      aws_region:
        description: 'AWS Region'
        required: true
        default: 'us-east-1'
      terraform_action:
        description: 'Terraform action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply
          - destroy
      source_branch:
        description: 'Branch of the source repo to checkout'
        required: true
        default: 'main'

jobs:
  terraform:
    name: Run Terraform
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read
    env:
      AWS_REGION: ${{ inputs.aws_region }}
      ENVIRONMENT: ${{ inputs.environment }}
      TF_ACTION: ${{ inputs.terraform_action }}
    steps:
      - name: Checkout infrastructure repo
        uses: actions/checkout@v4

      - name: Checkout source repo
        uses: actions/checkout@v4
        with:
          repository: BheemrajRH/Operationautomation
          ref: ${{ inputs.source_branch }}
          token: ${{ secrets.GH_PAT }}
          path: tf-source

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: terraform -chdir=tf-source/env/${{ inputs.environment }}/fargate init

      - name: Terraform Action
        run: |
          TFVARS_FILE="${{ inputs.environment }}.tfvars"
          if [[ "$TF_ACTION" == "plan" ]]; then
            terraform -chdir=tf-source/env/${{ inputs.environment }}/fargate plan -var-file="$TFVARS_FILE"
          elif [[ "$TF_ACTION" == "apply" ]]; then
            terraform -chdir=tf-source/env/${{ inputs.environment }}/fargate apply -auto-approve -var-file="$TFVARS_FILE"
          elif [[ "$TF_ACTION" == "destroy" ]]; then
            terraform -chdir=tf-source/env/${{ inputs.environment }}/fargate destroy -auto-approve -var-file="$TFVARS_FILE"
          else
            echo "Unsupported action: $TF_ACTION"
            exit 1
          fi
